---
- name: copy pacman config
  ansible.builtin.copy:
    src: etc/pacman.conf
    dest: /etc/pacman.conf
    mode: '0644'
    owner: root
    group: root
  become: true

# keyring need to be upgrade for newly signed packages.
- name: pacman update archlinux-keyring
  community.general.pacman:
    name:
      - archlinux-keyring
    state: latest
    update_cache: true
  become: true

- name: pacman install packages
  community.general.pacman:
    name: "{{ pacman_pacstrap_packages + pacman_packages + pacman_extra_packages }}"
    reason: explicit
    reason_for: all
    state: present
  become: true

# need to upgrade later due to deps conflict (or packages move from core to extra)
- name: pacman upgrade
  community.general.pacman:
    upgrade: true
    upgrade_extra_args: --ask 4
  become: true

- name: copy makepkg config for build aur package
  ansible.builtin.copy:
    src: etc/makepkg.conf
    dest: /etc/makepkg.conf
    mode: '0644'
    owner: root
    group: root
  become: true

- name: Create the `aur_builder` user
  ansible.builtin.user:
    name: aur_builder
    create_home: yes
  become: true

- name: Allow the `aur_builder` user to run `sudo pacman` without a password
  ansible.builtin.lineinfile:
    path: /etc/sudoers.d/11-install-aur_builder
    line: 'aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman'
    create: yes
    mode: '0644'
    validate: 'visudo -cf %s'
  become: true

- name: pacman install yay deps
  community.general.pacman:
    name:
      - fakeroot
    state: present
  become: true

- name: Install yay
  kewlfft.aur.aur:
    name: yay
    use: makepkg
    state: latest
    aur_only: true
  become: true
  become_user: aur_builder

# disable upgrade all aur.
# some aur (in this case, gct) are manual installed. it is not properly test and break while build.
#- name: Upgrade the system using yay, only act on AUR packages.
#  kewlfft.aur.aur:
#    upgrade: true
#    update_cache: true
#    use: yay
#    aur_only: true

# install always upgrade to latest
- name: install aur packages
  kewlfft.aur.aur:
    use: yay
    name: "{{ aur_packages + aur_extra_packages }}"
    state: latest
  become: true
  become_user: aur_builder
  when: aur_packages | length > 0

- name: import private_aur
  ansible.builtin.import_role:
    name: novicecpp.homeconfig.private_aur
